{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_REACTJS/CurrentChange/src/containers/search-bar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { _fetchCountries } from '../actions/index';\n\nconst lodash = require('lodash');\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeCountry = e => {\n      const country_code = e.target.value;\n      const country = lodash.find(this.props.countries);\n      console.log(e.target.value);\n    };\n  }\n\n  componentWillMount() {\n    this.props._fetchCountries();\n  }\n\n  renderSelectCountries() {\n    return React.createElement(\"select\", {\n      className: \"form-control search_bar\",\n      onChange: e => this.onChangeCountry(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.countries.map(country => React.createElement(\"option\", {\n      key: country.code,\n      value: (country.code, {\n        code: countryCode\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, country.name)));\n  }\n\n  render() {\n    // console.log(this.props.countries)\n    return React.createElement(\"form\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.renderSelectCountries());\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  countries: state.countries.countries\n});\n\nexport default connect(mapStateToProps, {\n  _fetchCountries\n})(SearchBar);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_REACTJS/CurrentChange/src/containers/search-bar.js"],"names":["React","Component","connect","_fetchCountries","lodash","require","SearchBar","onChangeCountry","e","country_code","target","value","country","find","props","countries","console","log","componentWillMount","renderSelectCountries","map","code","countryCode","name","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAGA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SA0B9BM,eA1B8B,GA0BXC,CAAD,IAAO;AACrB,YAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA9B;AACA,YAAMC,OAAO,GAAGR,MAAM,CAACS,IAAP,CAAY,KAAKC,KAAL,CAAWC,SAAvB,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACE,MAAF,CAASC,KAArB;AAEH,KA/B6B;AAAA;;AAElCO,EAAAA,kBAAkB,GAAE;AAChB,SAAKJ,KAAL,CAAWX,eAAX;AACH;;AAIDgB,EAAAA,qBAAqB,GAAE;AAEnB,WACI;AACA,MAAA,SAAS,EAAC,yBADV;AAEI,MAAA,QAAQ,EAAEX,CAAC,IAAI,KAAKD,eAAL,CAAqBC,CAArB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIK,KAAKM,KAAL,CAAWC,SAAX,CAAqBK,GAArB,CAAyBR,OAAO,IAC7B;AAAQ,MAAA,GAAG,EAAEA,OAAO,CAACS,IAArB;AAA2B,MAAA,KAAK,GAAET,OAAO,CAACS,IAAR,EAAa;AAACA,QAAAA,IAAI,EAAEC;AAAP,OAAf,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,OAAO,CAACW,IADb,CADH,CAJL,CADJ;AAaH;;AAYDC,EAAAA,MAAM,GAAI;AACP;AACC,WACK;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,qBAAL,EADL,CADL;AAKC;;AA1C6B;;AAgDlC,MAAOM,eAAe,GAAGC,KAAK,KAAK;AAC/BX,EAAAA,SAAS,EAAEW,KAAK,CAACX,SAAN,CAAgBA;AADI,CAAL,CAA9B;;AAIA,eAAeb,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA;AAAD,CAAlB,CAAP,CAA4CG,SAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { _fetchCountries } from '../actions/index';\nconst lodash = require('lodash');\n\n\nclass SearchBar extends Component {\n\ncomponentWillMount(){\n    this.props._fetchCountries();\n}\n\n\n\nrenderSelectCountries(){\n\n    return(\n        <select \n        className=\"form-control search_bar\" \n            onChange={e => this.onChangeCountry(e)} >\n\n            {this.props.countries.map(country =>(\n                <option key={country.code} value={country.code,{code: countryCode} } >\n                    {country.name}\n                </option>\n             ))}\n        \n         </select>\n    )\n}\n\n\n    onChangeCountry = (e) => {\n        const country_code = e.target.value;\n        const country = lodash.find(this.props.countries)\n        console.log(e.target.value)\n\n    }\n\n\n\nrender () {\n   // console.log(this.props.countries)\n    return (\n         <form className=\"form-group\">\n             {this.renderSelectCountries() }\n        </form>\n        )\n    }\n}\n\n\n\n\nconst  mapStateToProps = state => ({\n    countries: state.countries.countries\n})\n\nexport default connect(mapStateToProps, {_fetchCountries})(SearchBar);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/Maranatha/Desktop/PROJECT_REACTJS/CurrentChange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_COUNTRIES } from '../actions/types'; //Pseudo valeur de base de countriesReducer dans le combineReducer\n\nconst initialState = {\n  countries: []\n};\nexport default function (state = initialState, action) {\n  let nextState;\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_COUNTRIES:\n      return nextState = _objectSpread({}, state, {\n        countries: getCountriesInfos(payload)\n      });\n\n    default:\n      return state;\n  } //if this reducers isn't interessed by the action  , return me just state without touch it.\n\n}\n; //We choose important infos in datas , that we use in apps\n\nfunction getCountriesInfos(data) {\n  return data.map(c => {\n    return {\n      name: c.name,\n      currencyCode: c.currencies[0].code,\n      flag: c.flag,\n      code: c.alpha3Code\n    };\n  }).filter(c => c.currencyCode != 'USD');\n}","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_REACTJS/CurrentChange/src/reducers/countriesReducer.js"],"names":["GET_COUNTRIES","initialState","countries","state","action","nextState","type","payload","getCountriesInfos","data","map","c","name","currencyCode","currencies","code","flag","alpha3Code","filter"],"mappings":";AAAA,SAASA,aAAT,QAA8B,kBAA9B,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGF,YAAlB,EAAgCG,MAAhC,EAAuC;AAEtD,MAAIC,SAAJ;AAFsD,QAG9CC,IAH8C,GAG3BF,MAH2B,CAG9CE,IAH8C;AAAA,QAGvCC,OAHuC,GAG3BH,MAH2B,CAGvCG,OAHuC;;AAKjD,UAAOD,IAAP;AAEG,SAAKN,aAAL;AACI,aAAOK,SAAS,qBACTF,KADS;AAEZD,QAAAA,SAAS,EAAEM,iBAAiB,CAACD,OAAD;AAFhB,QAAhB;;AAKJ;AACI,aAAOJ,KAAP;AATP,GALiD,CAgBnD;;AAGF;AAAA,C,CAED;;AACA,SAASK,iBAAT,CAA2BC,IAA3B,EAAgC;AAE5B,SAAOA,IAAI,CAACC,GAAL,CAASC,CAAC,IAAE;AACf,WAAO;AACLC,MAAAA,IAAI,EAAED,CAAC,CAACC,IADH;AAELC,MAAAA,YAAY,EAAEF,CAAC,CAACG,UAAF,CAAa,CAAb,EAAgBC,IAFzB;AAGLC,MAAAA,IAAI,EAAEL,CAAC,CAACK,IAHH;AAILD,MAAAA,IAAI,EAAEJ,CAAC,CAACM;AAJH,KAAP;AAMH,GAPM,EAOJC,MAPI,CAOIP,CAAC,IAAIA,CAAC,CAACE,YAAF,IAAkB,KAP3B,CAAP;AASH","sourcesContent":["import { GET_COUNTRIES } from '../actions/types';\n\n//Pseudo valeur de base de countriesReducer dans le combineReducer\nconst initialState = {\n  countries: []\n};\n\n\nexport default function (state = initialState, action){\n\nlet nextState;\nconst { type , payload } = action\n\n     switch(type){\n\n        case GET_COUNTRIES:\n            return nextState = {\n                ...state,\n                countries: getCountriesInfos(payload)\n            }\n\n        default:\n            return state\n    }\n   //if this reducers isn't interessed by the action  , return me just state without touch it.\n\n\n};\n\n//We choose important infos in datas , that we use in apps\nfunction getCountriesInfos(data){\n\n    return data.map(c=>{\n        return {\n          name: c.name,\n          currencyCode: c.currencies[0].code,\n          flag: c.flag,\n          code: c.alpha3Code\n        };\n    }).filter( c => c.currencyCode != 'USD')\n\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/Maranatha/Desktop/PROJECT_REACTJS/CurrentChange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios'; //Types \n\nimport { GET_COUNTRIES, GET_RATE_EXCHANGE } from \"./types\"; //Utils\n\nimport { formatedDate, getLastMonth } from '../utils/func';\nexport const _fetchCountries = () => async dispatch => {\n  const response = await axios.get('https://restcountries.eu/rest/v2/all');\n  dispatch({\n    type: GET_COUNTRIES,\n    payload: response.data\n  });\n};\nexport const _fetchRateExchange = country => async dispatch => {\n  try {} catch (error) {}\n\n  const response = await axios.get(\"https://api.exchangeratesapi.io/history?start_at=\".concat(getLastMonth(), \"&end_at=\").concat(formatedDate(new Date()), \"&base=USD&symbols=\").concat(country.code, \" \"));\n  console.log(response);\n  dispatch({\n    type: GET_RATE_EXCHANGE,\n    payload: _objectSpread({\n      rates: response.data.rates\n    }, country)\n  });\n};\n/*\n function formatedate(date){\n    let convert = date.toISOString().split(\"T\")[0];\n    console.log('cons', convert)\n    return \n}\n\nfunction getLastMonthe(){\n\n    let now = new Date();\n    now.setMonth( now.getMonth() -1 )\n    console.log('last', formatedDate(now) )\n    return formatedDate(now)\n} */","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_REACTJS/CurrentChange/src/actions/index.js"],"names":["axios","GET_COUNTRIES","GET_RATE_EXCHANGE","formatedDate","getLastMonth","_fetchCountries","dispatch","response","get","type","payload","data","_fetchRateExchange","country","error","Date","code","console","log","rates"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,SAAjD,C,CACA;;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,eAA3C;AAGA,OAAO,MAAMC,eAAe,GAAE,MAAK,MAAMC,QAAN,IAAiB;AAEjD,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,sCAAV,CAAvB;AAEKF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAER,aADD;AAELS,IAAAA,OAAO,EAACH,QAAQ,CAACI;AAFZ,GAAD,CAAR;AAIP,CARM;AAWP,OAAO,MAAMC,kBAAkB,GAAEC,OAAO,IAAG,MAAMP,QAAN,IAAgB;AAEvD,MAAI,CAEH,CAFD,CAEE,OAAOQ,KAAP,EAAc,CAEf;;AACD,QAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,4DAA8DJ,YAAY,EAA1E,qBAAuFD,YAAY,CAAC,IAAIY,IAAJ,EAAD,CAAnG,+BAAoIF,OAAO,CAACG,IAA5I,OAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAaX,QAAb;AAEAD,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAEP,iBADC;AAEPQ,IAAAA,OAAO;AAAIS,MAAAA,KAAK,EAAEZ,QAAQ,CAACI,IAAT,CAAcQ;AAAzB,OAAoCN,OAApC;AAFA,GAAD,CAAR;AAIH,CAfM;AAiBP","sourcesContent":["import axios from 'axios'\n//Types \nimport { GET_COUNTRIES, GET_RATE_EXCHANGE } from \"./types\";\n//Utils\nimport { formatedDate, getLastMonth } from '../utils/func';\n\n\nexport const _fetchCountries= ()=> async dispatch =>{\n\n   const response = await axios.get('https://restcountries.eu/rest/v2/all');\n\n        dispatch({\n            type: GET_COUNTRIES,\n            payload:response.data\n        });\n};\n\n\nexport const _fetchRateExchange= country =>async dispatch=>{\n\n    try {\n        \n    } catch (error) {\n        \n    }\n    const response = await axios.get(`https://api.exchangeratesapi.io/history?start_at=${getLastMonth()}&end_at=${formatedDate(new Date())}&base=USD&symbols=${country.code} `);\n\n    console.log( response )\n\n    dispatch({\n      type: GET_RATE_EXCHANGE, \n      payload: { rates: response.data.rates , ...country}\n    });\n}\n\n/*\n function formatedate(date){\n    let convert = date.toISOString().split(\"T\")[0];\n    console.log('cons', convert)\n    return \n}\n\nfunction getLastMonthe(){\n\n    let now = new Date();\n    now.setMonth( now.getMonth() -1 )\n    console.log('last', formatedDate(now) )\n    return formatedDate(now)\n} */"]},"metadata":{},"sourceType":"module"}
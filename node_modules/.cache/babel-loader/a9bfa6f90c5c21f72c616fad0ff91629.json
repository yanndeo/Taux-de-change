{"ast":null,"code":"import _objectSpread from \"/Users/Maranatha/Desktop/PROJECT_REACTJS/CurrentChange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios'; //Types \n\nimport { GET_COUNTRIES, GET_RATE_EXCHANGE } from \"./types\"; //Utils\n\nimport { formatedDate, getLastMonth } from '../utils/func';\nexport const _fetchCountries = () => async dispatch => {\n  try {} catch (error) {}\n};\nexport const _fetchRateExchange = country => async dispatch => {\n  try {\n    const response = await axios.get(\"https://api.exchangeratesapi.io/history?start_at=\".concat(getLastMonth(), \"&end_at=\").concat(formatedDate(new Date()), \"&base=USD&symbols=\").concat(country.code, \" \"));\n    console.log(response);\n    dispatch({\n      type: GET_RATE_EXCHANGE,\n      payload: _objectSpread({\n        rates: response.data.rates\n      }, country)\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n/*\n function formatedate(date){\n    let convert = date.toISOString().split(\"T\")[0];\n    console.log('cons', convert)\n    return \n}\n\nfunction getLastMonthe(){\n\n    let now = new Date();\n    now.setMonth( now.getMonth() -1 )\n    console.log('last', formatedDate(now) )\n    return formatedDate(now)\n} */","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_REACTJS/CurrentChange/src/actions/index.js"],"names":["axios","GET_COUNTRIES","GET_RATE_EXCHANGE","formatedDate","getLastMonth","_fetchCountries","dispatch","error","_fetchRateExchange","country","response","get","Date","code","console","log","type","payload","rates","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,SAAjD,C,CACA;;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,eAA3C;AAGA,OAAO,MAAMC,eAAe,GAAE,MAAK,MAAMC,QAAN,IAAiB;AAEhD,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AAEJ,CARM;AAWP,OAAO,MAAMC,kBAAkB,GAAEC,OAAO,IAAG,MAAMH,QAAN,IAAgB;AAEvD,MAAI;AACA,UAAMI,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,4DAA8DP,YAAY,EAA1E,qBAAuFD,YAAY,CAAC,IAAIS,IAAJ,EAAD,CAAnG,+BAAoIH,OAAO,CAACI,IAA5I,OAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAJ,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEd,iBADD;AAELe,MAAAA,OAAO;AAAIC,QAAAA,KAAK,EAAER,QAAQ,CAACS,IAAT,CAAcD;AAAzB,SAAmCT,OAAnC;AAFF,KAAD,CAAR;AAKH,GARD,CAQE,OAAOF,KAAP,EAAc;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEH;AAEJ,CAfM;AAiBP","sourcesContent":["import axios from 'axios'\n//Types \nimport { GET_COUNTRIES, GET_RATE_EXCHANGE } from \"./types\";\n//Utils\nimport { formatedDate, getLastMonth } from '../utils/func';\n\n\nexport const _fetchCountries= ()=> async dispatch =>{\n\n    try {\n        \n    } catch (error) {\n        \n    }\n   \n};\n\n\nexport const _fetchRateExchange= country =>async dispatch=>{\n\n    try {\n        const response = await axios.get(`https://api.exchangeratesapi.io/history?start_at=${getLastMonth()}&end_at=${formatedDate(new Date())}&base=USD&symbols=${country.code} `);\n        console.log(response)\n        dispatch({\n            type: GET_RATE_EXCHANGE,\n            payload: { rates: response.data.rates, ...country }\n        });\n\n    } catch (error) {\n        console.log(error)\n\n    }\n\n}\n\n/*\n function formatedate(date){\n    let convert = date.toISOString().split(\"T\")[0];\n    console.log('cons', convert)\n    return \n}\n\nfunction getLastMonthe(){\n\n    let now = new Date();\n    now.setMonth( now.getMonth() -1 )\n    console.log('last', formatedDate(now) )\n    return formatedDate(now)\n} */"]},"metadata":{},"sourceType":"module"}